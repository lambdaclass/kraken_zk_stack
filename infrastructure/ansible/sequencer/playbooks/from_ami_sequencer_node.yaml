- name: Sequencer node from private AMI (precompiled)
  hosts: nodes
  any_errors_fatal: true

  pre_tasks:
    - name: Enable systemd linger for {{ ansible_user }} user
      become: true
      become_user: root
      ansible.builtin.shell: |
        loginctl enable-linger {{ ansible_user }}

    - name: Create .ssh for {{ ansible_user }} user
      ansible.builtin.file:
        state: directory
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        path: /home/{{ ansible_user }}/.ssh

    - name: Set server hostname
      become: true
      become_user: root
      ansible.builtin.hostname:
        name: '{{ inventory_hostname }}'

    - name: Create config dir for {{ ansible_user }} user
      ansible.builtin.file:
        state: directory
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        path: /home/{{ ansible_user }}/config

    - name: Copy sequencer config files
      ansible.builtin.copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
      loop:
        - src: committee.json
          dest: /home/{{ ansible_user }}/config/committee.json
        - src: parameters.json
          dest: /home/{{ ansible_user }}/config/parameters.json
        - src: sequencer_{{ inventory_hostname }}.json
          dest: /home/{{ ansible_user }}/config/sequencer_{{ inventory_hostname }}.json

    - name: Create {{ ansible_user }} user systemd directory
      ansible.builtin.file:
        state: directory
        path: /home/{{ ansible_user }}/.config/systemd/user

    - name: Install systemd service
      ansible.builtin.template:
        src: sequencer.service.j2
        dest: /home/{{ ansible_user }}/.config/systemd/user/sequencer.service

    - name: (Re)start sequencer service
      ansible.builtin.systemd:
        scope: user
        state: restarted
        daemon_reload: true
        enabled: true
        name: sequencer
